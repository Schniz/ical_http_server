name: Docker images

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

jobs:
  build_binaries:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    strategy:
      matrix:
        include:
          - rust_target: "aarch64-unknown-linux-musl"
            docker_tag: "aarch64-musl"
            platform: "linux/arm64"
            tag_prefix: "arm64"
            artifact_name: "arm64"
          - rust_target: "armv7-unknown-linux-musleabihf"
            docker_tag: "armv7-musleabihf"
            platform: "linux/arm/v7"
            artifact_name: "armv7"
            tag_prefix: "armv7"
          - rust_target: "x86_64-unknown-linux-musl"
            docker_tag: "x86_64-musl"
            platform: "linux/amd64"
            artifact_name: "amd64"
            tag_prefix: "amd64"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: build binary
        run: |
          docker run --rm -v "$(pwd)":/home/rust/src messense/rust-musl-cross:${{matrix.docker_tag}} \
            cargo build --release

      - name: create the directory structure
        run: |
          mkdir -p $(dirname ${{matrix.platform}})
          cp target/${{matrix.rust_target}}/release/sensor_http ${{matrix.platform}}

      - name: store binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.artifact_name}}
          path: linux

  docker:
    needs:
      - build_binaries
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: download binaries
        uses: actions/download-artifact@v2

      - name: list directories
        run: |
          ls -R

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
